(()=>{const e=document.querySelector(".search-loaction"),t=document.querySelector(".search-loaction input"),n=document.querySelector(".city-name p"),c=document.querySelector(".card-body"),s=document.querySelector(".card-top img"),i=document.querySelector(".back-card"),a=e=>(celcius=Math.round(e-273.15),celcius);updateWeatherApp=e=>{console.log(e);const t=e.weather[0].icon,o=`http://openweathermap.org/img/wn/${t}@2x.png`;n.textContent=e.name,c.innerHTML=`\n    <div class="card-mid row">\n            <div class="col-8 text-center temp">\n              <span>${a(e.main.temp)}&deg;C</span>\n            </div>\n            <div class="col-4 condition-temp">\n              <p class="condition">${e.weather[0].description}</p>\n              <p class="high">${a(e.main.temp_max)}&deg;C</p>\n              <p class="low">${a(e.main.temp_min)}&deg;C</p>\n            </div>\n          </div>\n\n          <div class="icon-container card shadow mx-auto">\n            <img src="${o}" alt="" />\n          </div>\n          <div class="card-bottom px-5 py-4 row">\n            <div class="col text-center">\n              <p>${a(e.main.feels_like)}&deg;C</p>\n              <span>Feels Like</span>\n            </div>\n            <div class="col text-center">\n              <p>${e.main.humidity}%</p>\n              <span>Humidity</span>\n            </div>\n          </div>\n    `,t.includes("d")?(console.log("day"),s.setAttribute("src","img/day_image.svg"),n.classList.contains("text-white")?n.classList.remove("text-white"):n.classList.add("text-black")):(console.log("night"),s.setAttribute("src","img/night_image.svg"),n.classList.contains("text-black")?n.classList.remove("text-black"):n.classList.add("text-white")),i.classList.remove("d-none")},e.addEventListener("submit",(n=>{n.preventDefault();const c=t.value.trim();console.log(c),e.reset(),requestCity(c).then((e=>{updateWeatherApp(e)})).catch((e=>{console.log(e)}))}))})();